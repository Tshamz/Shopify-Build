// --------------
// Override .quick-shop-modal.overlay-container default styling
.ensemble.quick-shop-modal.overlay-container {
  .quick-shop-ensemble-thislook {
    display: flex;
    flex-flow: column nowrap;
    flex-basis: 12%;
    align-self: flex-end;
    @include min-tablet {
      overflow:scroll;
      max-height:589px;
      align-self: flex-end;
    }
    .this-look-heading {
      @extend %merireg;
      color: $alt-gray;
      text-align: center;
      padding: 30px 0 36px;
      @include max-tablet {
        display: none;
      }
    }
    img {
      cursor: pointer;
      width: 100%;
      flex-basis: 33.33%;
      @include min-tablet {
        flex:1 0 auto;
      }
    }
     @include max-tablet {
      order: 3;
      flex-direction: row;
      align-items: flex-start;
      border-top: 2px solid #202426;
      border-bottom: 2px solid #202426;
      flex: 1 0 auto;
    }
  }
  .quick-shop-image-slider {
    flex-basis: 44%;
    @include max-tablet {
      order: 1;
      flex: 1 0 auto;
      img {
        height:100%;
      } 
    }
    @include mobile-only {
      img {
        width:100%;
        height:auto;
      } 
    }
  }
  .quick-shop-item-information {
    flex-basis: 44%;
    flex-shrink: 0;
    @include max-tablet {
      order: 2;
        flex: 1 0 auto;
        .product-info-size::after {
        display: block;
      }
    }
  }
  //------------------------------------
  // Most unused stuff has been removed, but this bug is still worth being aware of
  //
  // http://meyerweb.com/eric/thoughts/2011/09/12/un-fixing-fixed-elements-with-css-transforms/
  //
  // --------------
  // Explanation for problem with scrolling back to top on mobile /* 1 */
  // @include max-tablet {
  //   display: block;
  //   padding: 0;
  //   position: fixed;
  //   top: 52px;
  //   transition: transform 0.5s;
  //   transform: translateX(-100%);
  // }
}

// --------------
// Because of /* 1 */ .control operator (position: fixed;) is actually positioned relative to its closest
// positioned parent (.ensemble.quick-shop-modal.overlay-container) and not the viewport. As it so happens, // the parent is actually itself position: fixed; with top: 75; (top: 52; mobile) so positioning the control
// operator top:; the negative of the parent's top resets it relative to the viewport
// body#ensembles .control-operator {
//   top: -75px;
//   @include max-tablet {
//     top: -52px;
//   }
// }

// --------------
// When the active overlay is ensemble-quick-shop, move modal from -100% to 0%.
// Also, when you're on the ensembles page, and the active-overlay switches from ensemble-quick-shop to
// inline-cart, prevent the ensemble-quick-shop from sliding back to -100%
@include max-tablet {
  .overlay-containers[active-overlay="ensemble-quick-shop"] .quick-shop-modal.overlay-container,
  #ensembles .overlay-containers[active-overlay="inline-cart"] .quick-shop-modal.overlay-container {
    transform: translateX(0);
  }
}
